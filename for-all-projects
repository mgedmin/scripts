#!/bin/bash
set -eu

if [[ $# -eq 0 || $1 = --help ]]; then
    echo "usage: for-all-projects [--zope] command [args ...]"
    echo "options:"
    echo "  --projects    use ~/projects/* (default)"
    echo "  --zope        use ~/src/zopefoundation/*"
    exit 0
fi

where=~/projects
instructions="(cd ~/src/mg-infra && ansible-playbook projects.yml)"

case "$1" in
    --projects)
        shift
        ;;
    --zope)
        where=~/src/zopefoundation
        instructions="(mkdir ~/src/zopefoundation && cd ~/src/zopefoundation && ghcloneall --init --org zopefoundation && ghcloneall)"
        shift
        ;;
esac

cd $where || {
    # shellcheck disable=SC2088
    echo "$where is missing, aborting" 1>&2
    echo "$instructions" 1>&2
    exit 1
}

purple=$(tput setaf 5)
red=$(tput setaf 1)
reset=$(tput sgr0)
rc=0
failures=()
for project in *; do
    printf '\n%s+ %s%s\n\n' "$purple" "$project" "$reset" 1>&2
    (cd "$project" && "$@") || { rc=1; failures+=("$project"); }
done

if [[ ${#failures[@]} -ne 0 ]]; then
    printf '\n%s+++ FAILED: %s%s\n' "$red" "${failures[*]}" "$reset" 1>&2
fi

exit $rc
