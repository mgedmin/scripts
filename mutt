#!/bin/bash
where=~/src/neomutt


# https://clang.llvm.org/docs/AddressSanitizer.html#suppressing-memory-leaks
export LSAN_OPTIONS=suppressions=$HOME/.lsan.supp

# See https://github.com/google/sanitizers/wiki/AddressSanitizer#faq
# this makes it more accurate but not terribly slow (for accurate but slow use
# mutt --asan)
export ASAN_OPTIONS=fast_unwind_on_malloc=0:malloc_context_size=4

case "$1" in
    --valgrind)
        prefix="valgrind --log-file=valgrind.log"
        prefix+=" --track-origins=yes"  # slow but better info
        prefix+=" --malloc-fill=cc"
        if [ -e $where/valgrind-suppression.txt ]; then
            # source: https://flatcap.org/mutt/valgrind-suppression.txt.gz
            prefix+=" --suppressions=$where/valgrind-suppression.txt"
        fi
        shift
        ;;
    --gdb)
        # https://stackoverflow.com/questions/8657648/how-to-have-gdb-exit-if-program-succeeds-break-if-program-crashes
        # note that "set confirm on" appears to be default, so I don't have to
        # worry about escaping arguments with spaces
        prefix="gdb -silent -return-child-result -ex run -ex quit --args"
        shift
        ;;
    --asan)
        # ASAN reports memory leaks with truncated stack traces unless I do
        # this, which makes mutt noticeably slower (but not as slow as
        # valgrind).  See https://github.com/google/sanitizers/wiki/AddressSanitizer#faq
        export ASAN_OPTIONS=fast_unwind_on_malloc=0
        shift
        ;;
    *)
        prefix=
        ;;
esac


if [ -x $where/neomutt ]; then
    if ! [ -e $where/po/lt.mo ] || ! [ $where/po/lt.mo -nt $where/po/lt.po ]; then
      make -C $where po/lt.mo
    fi
    if ! [ -e ~/.local/share/locale/lt/LC_MESSAGES/neomutt.mo ]; then
      mkdir -p ~/.local/share/locale/lt/LC_MESSAGES
      ln -sfr $where/po/lt.mo ~/.local/share/locale/lt/LC_MESSAGES/neomutt.mo
    fi
    export TEXTDOMAINDIR=~/.local/share/locale/
    exec $prefix $where/neomutt "$@"
elif [ -x /usr/bin/neomutt ]; then
    exec $prefix /usr/bin/neomutt "$@"
else
    exec $prefix /usr/bin/mutt "$@"
fi
