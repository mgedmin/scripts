#!/bin/bash
set -eu

pull=no
branch=
clean=no
for arg; do
    case "$arg" in
        -h|--help)
            echo "Usage: $0 [options]"
            echo "Options:"
            echo "  --pull              git pull before building"
            echo "  --branch=BRANCH     git checkout BRANCH before building"
            echo "  --clean             git clean -dfx before building"
            exit
            ;;
        --pull)
            pull=yes
            ;;
        --branch=*)
            branch=${arg#--branch=}
            ;;
        --clean)
            clean=yes
            ;;
        *)
            echo "unrecognized argument: $arg" 1>&2
            exit 1
            ;;
    esac
done

check-build-deps() {
    missing=()
    for dep; do
        if ! test -e /var/lib/dpkg/info/"$dep":*.list; then
            missing+=("$dep")
        fi
    done
    if [[ ${#missing[@]} -ne 0 ]]; then
        printf "Some build dependencies are missing!\n\n"
        printf "  sudo apt install %s\n" "${missing[*]}"
        exit 1
    fi
}

# from https://salsa.debian.org/cpython-team/python3/blob/python3.7/debian/control.in
# (I only selected some of the more important dependencies)
check-build-deps \
    libreadline-dev \
    libncursesw5-dev \
    zlib1g-dev \
    libbz2-dev \
    liblzma-dev \
    libssl-dev \
    libsqlite3-dev \
    libffi-dev

autoclone ~/src/cpython https://github.com/python/cpython/ "CPython sources"

cd ~/src/cpython || exit 1
if [ -n "$branch" ]; then
    git checkout "$branch"
fi
if [ $pull = yes ]; then
    git pull
fi
if [ $clean = yes ]; then
    git clean -dfx
fi

version=$(perl -ne '/^m4_define[(]PYTHON_VERSION, (.*)[)]/ and print $1' configure.ac | tr -d .)
test -n "$version" || {
    echo "Failed to determine Python version from configure.ac" 1>&2
    exit 1
}
prefix="$HOME/opt/python${version//./}"
if [ $clean = yes ]; then
    echo "Cleaning $prefix"
    rm -rf "$prefix"
fi
# XXX: should I add --enable-shared?
./configure --prefix="$prefix"
make -j4
make install
if ! test -e "$HOME/bin/python$version"; then
    ln -s python "$HOME/bin/python$version"
fi
